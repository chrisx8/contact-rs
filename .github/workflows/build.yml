name: build
on:
  push:
    branches: main
  schedule:
    - cron: "0 3 * * 0"
jobs:
  build_binary:
    name: Build Linux x86_64 binary
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: cargo-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          path: ~/.cargo/registry
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
      - name: Set up Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ env.TARGET }}
          toolchain: stable
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --jobs 2 --locked --release --target ${{ env.TARGET }}
      - name: Strip binary
        run: strip target/${{ env.TARGET }}/release/contact-rs
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: contact-rs_${{ env.TARGET }}
          path: target/${{ env.TARGET }}/release/contact-rs
  build_container:
    name: Build container image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository_owner }}/contact-rs
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: |
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}:latest .
      - name: Push to GHCR
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}:latest
