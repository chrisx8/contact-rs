name: test
on:
  push:
    branches-ignore: main
  pull_request:
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: cargo-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          path: ~/.cargo/registry
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
      - name: Set up Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ env.TARGET }}
          toolchain: stable
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --jobs 2 --locked --target ${{ env.TARGET }}
      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --jobs 2 --locked --target ${{ env.TARGET }}
      - name: Test web server
        run: |
          grep -v '^#' .env.example
          export $(grep -v '^#' .env.example | xargs)
          target/${{ env.TARGET }}/debug/contact-rs &
          sleep 10
          curl -Lfv localhost:8000
          killall contact-rs
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: contact-rs_debug_${{ env.TARGET }}
          path: target/${{ env.TARGET }}/debug/contact-rs
  test_container:
    name: Test container image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: contact-rs
    steps:
      - uses: actions/checkout@v3
      - name: Build container
        run: |
          docker build -t "$IMAGE_NAME:test" .
      - name: Launch container
        run: |
          docker run -d -p 8000:8000 --env-file .env.example --name "$IMAGE_NAME" "$IMAGE_NAME:test"
      - name: Test web server in container
        run: |
          sleep 5
          curl -Lfv localhost:8000
          docker kill "$IMAGE_NAME"
